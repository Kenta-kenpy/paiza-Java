// 文字列の出力
import java.util.*;

public class Main {
    public static void main(String[] args) {
        System.out.println("paiza");
    }
}

// 文字列の受け取り
import java.util.*;

public class Main {
    public static void main(String[] args) {
        
        var sc = new Scanner(System.in);
        
        var s = sc.next();

        System.out.println(s);
    }
}

// i文字目の出力
import java.util.*;

public class Main {
    public static void main(String[] args) {
        
        var sc = new Scanner(System.in);
        
        var S = sc.next();
        var i = sc.nextInt();

        System.out.println(S.charAt(i - 1));
    }
}

// 文字列の文字数
import java.util.*;

public class Main {
    public static void main(String[] args) {
        
        var sc = new Scanner(System.in);
        
        var S = sc.next();
        
        //---------------------------------------------
        // 1. 文字列比較は equals メソッドでおこなう
        // if ("paiza".equals(S)) {
        //     System.out.println("YES");
        // } else {
        //     System.out.println("NO");
        // }
        //---------------------------------------------
        
        //---------------------------------------------
        // 2. Java7 からは switch でも文字列の比較が可能
        //    まｔ Java12 からは swtich 式としても利用可能
        System.out.println(
            switch (S) {
                case "paiza" -> "YES";
                default -> "NO";
            });
        //---------------------------------------------
    }
}

// 文字の検索
import java.util.*;

public class Main {
    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        
        String S = sc.next();

        System.out.println(S.length());
    }
}

// 文字列の連結
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        var S = sc.next();
        var c = sc.next();

        for (var i = 0; i < S.length(); i++) {
            if (c.equals(Character.toString(S.charAt(i)))) {
                System.out.println(i + 1);
            }
        }
    }
}

// 部分文字列


// 文字列の挿入


// 文字列の書き換え


// 文字列から数値への変換


// 数値から文字列への変換


// 大文字から小文字への変換


// 小文字から大文字への変換


// 大文字小文字の反転


// 文字列の検索


// 文字列の反転


// 回文判定

    
// 文字列の分割

    
// 日時データの変換その1


// 日時データの変換その2


// 数値判定

    
// 重複の削除


// パスワード作成


// 表記の訂正

    
// 数式の計算(1桁)


// 数式の計算


// 巨大な数の足し算(繰り上がりなし)


// 巨大な数の足し算


// 巨大な数のかけ算
