// paizaの森練習問題コンテスト過去問題1　★
// Q.　スポーツの人数
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String sport = scanner.nextLine().trim();
        scanner.close();
        
        // スポーツ名と人数のマップを作成
        Map<String, Integer> sportToPlayers = new HashMap<>();
        sportToPlayers.put("baseball", 9);
        sportToPlayers.put("soccer", 11);
        sportToPlayers.put("rugby", 15);
        sportToPlayers.put("basketball", 5);
        sportToPlayers.put("volleyball", 6);
        
        // 結果を出力
        System.out.println(sportToPlayers.get(sport));
    }
}
/*スポーツ名ごとに条件分岐をして，入力とスポーツ名が一致したらスポーツに対応した競技人数を表示します．*/

// Q.　バイトの休憩時間
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int h = Integer.parseInt(scanner.nextLine().trim());
        scanner.close();
        
        if (h > 8) {
            System.out.println("60 min");
        } else if (h > 6) {
            System.out.println("45 min");
        } else {
            System.out.println("no break");
        }
    }
}
/*勤務時間が6時間を超えて8時間以下の場合は「45 min」、8時間を超える場合は「60 min」、それ以外は「no break」を出力します。*/

// Q.　自動車の燃費
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int v = scanner.nextInt(); // 給油量（L）
        int d = scanner.nextInt(); // 走行距離（km）
        scanner.close();
        
        int fuelEfficiency = d / v; // 燃費計算（小数点以下切り捨て）
        System.out.println(fuelEfficiency);
    }
}
/*給油量と走行距離を入力として受け取り、燃費を小数点以下切り捨てで出力するようにしました。*/

// Q.　背番号順
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        // 入力される選手の数を読み取る
        int n = Integer.parseInt(scanner.nextLine().trim());
        
        // 選手情報を格納するリストを作成
        List<Player> players = new ArrayList<>();
        
        // n 人分の選手情報を読み取る
        for (int i = 0; i < n; i++) {
            String[] input = scanner.nextLine().split(" ");
            int number = Integer.parseInt(input[0]); // 背番号を取得
            String name = input[1]; // 選手名を取得
            players.add(new Player(number, name)); // リストに追加
        }
        scanner.close();
        
        // 背番号の昇順に並び替える
        players.sort(Comparator.comparingInt(p -> p.number));
        
        // ソート後の結果を出力
        for (Player player : players) {
            System.out.println(player.number + " " + player.name);
        }
    }
}

// 選手情報を保持するクラス
class Player {
    int number; // 背番号
    String name; // 選手名
    
    // コンストラクタ
    Player(int number, String name) {
        this.number = number;
        this.name = name;
    }
}
/*入力を [[背番号1，名前1], [背番号2，名前2], ...] という形で受け取ります． その配列を背番号によってソートし，ソート後の配列を出力します．
野球選手の背番号と名前を昇順に並び替えて出力する処理を実装しました。Player クラスを作成し、List と Comparator を用いたソートを行っています。*/

// paizaの森練習問題コンテスト過去問題2　★
// Q.　競輪のユニフォーム
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine().trim());
        scanner.close();

        String[] colors = {"white", "black", "red", "blue", "yellow", "green", "orange", "pink", "purple"};
        
        System.out.println(colors[n - 1]);
    }
}
/*colors の配列にあらかじめ、番号順に対応する色を格納します。
入力を受け取り n - 1 を出力することで、解を導くことができます。*/

// Q.　エレベーターの行き先
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String f1 = scanner.next(); // 現在の階
        String f2 = scanner.next(); // 移動したい階
        scanner.close();
        
        // "F" を取り除き数値に変換
        int currentFloor = Integer.parseInt(f1.replace("F", ""));
        int targetFloor = Integer.parseInt(f2.replace("F", ""));
        
        // 比較して出力
        if (currentFloor < targetFloor) {
            System.out.println("up");
        } else {
            System.out.println("down");
        }
    }
}
/*f1, f2 の１文字目について大小比較を行います。
f2 の方が大きければ、up、そうれなければ down を出力することで答えを導くことができます。*/

// Q.　長方形の面積
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // 入力を受け取る
        int e1 = scanner.nextInt();
        int e2 = scanner.nextInt();
        scanner.close();
        
        // いずれかの辺が0なら "invalid" を出力
        if (e1 == 0 || e2 == 0) {
            System.out.println("invalid");
        } else {
            // 面積を計算して出力
            System.out.println(e1 * e2);
        }
    }
}
/*e1, e2 のうち、どちらかが 0 であれば invalid を出力します。そうでなければ、２つの値をかけて出力することで答えを導くことができます。*/

// Q.　セール販売
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        int n = Integer.parseInt(scanner.nextLine()); // 購入アイテム数
        int totalPrice = 0;
        boolean hasPants = false;
        
        for (int i = 0; i < n; i++) {
            String[] item = scanner.nextLine().split(" ");
            String category = item[0];
            int price = Integer.parseInt(item[1]);
            
            totalPrice += price;
            if (category.equals("pants")) {
                hasPants = true;
            }
        }
        
        scanner.close();
        
        // 割引の適用条件を満たす場合、500円引き
        if (hasPants && totalPrice >= 2000) {
            totalPrice -= 500;
        }
        
        System.out.println(totalPrice);
    }
}
/*bool型を持つ pants を初期値では False に設定しておき、入力 c に pants が含まれている場合には pants を True にします。
最終的に合計金額が 2000 円以上であり、かつ pants が True である場合に、合計金額から 500 円引くことで答えを導くことができました。*/

// paizaの森練習問題コンテスト過去問題3　★
// Q.　文字列の逆順
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine().trim(); // 改行を考慮してトリム
        scanner.close();
        
        String reversed = new StringBuilder(s).reverse().toString();
        System.out.println(reversed);
    }
}
/*Scanner を使用して標準入力から文字列を受け取る。
trim() を使って余分な空白や改行を削除。
StringBuilder の reverse() メソッドを使用して文字列を反転。
結果を System.out.println で出力。*/

// Q.　英単語の生成（連結）
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        // Scannerを使って標準入力を読み込む
        Scanner scanner = new Scanner(System.in);
        
        // 2つの文字列s1とs2をスペース区切りで入力として受け取る
        String s1 = scanner.next();
        String s2 = scanner.next();
        
        // 2つの文字列を連結して出力する
        System.out.println(s1 + s2);
        
        // スキャナーを閉じる
        scanner.close();
    }
}
/*Scannerを使用して標準入力から2つの文字列を受け取ります。
scanner.next()を使用することで、スペースで区切られた文字列をそれぞれString s1、String s2として取得します。
取得した文字列s1とs2を+演算子で連結し、System.out.println()でそのまま出力します。*/

// Q.　小文字にする
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        // Scannerを使って入力を受け取る
        Scanner scanner = new Scanner(System.in);
        
        // 文字列を読み込む
        String s = scanner.nextLine();
        
        // 文字列を小文字に変換
        String result = s.toLowerCase();
        
        // 結果を出力
        System.out.println(result);
        
        // Scannerを閉じる
        scanner.close();
    }
}
/*Scannerを使って標準入力から文字列を受け取ります。
StringクラスのtoLowerCase()メソッドで、文字列のすべての大文字を小文字に変換します。
結果を標準出力に出力します。*/

// Q.　キーボードのシミュレーション
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        // 入力の数nを取得
        int n = sc.nextInt();
        sc.nextLine(); // 改行を読み飛ばし
        
        boolean capslock = false; // capslockの状態
        StringBuilder output = new StringBuilder();
        
        for (int i = 0; i < n; i++) {
            String input = sc.nextLine().trim();
            
            if (input.equals("capslock")) {
                // capslockが押された場合、状態を反転
                capslock = !capslock;
            } else if (input.startsWith("shift")) {
                // shift+キーの場合
                char key = input.charAt(6); // 7文字目（index 6）を取り出す
                if (capslock) {
                    // capslockが有効な場合は、小文字に変換
                    output.append(Character.toLowerCase(key));
                } else {
                    // 通常は大文字
                    output.append(Character.toUpperCase(key));
                }
            } else {
                // 普通のキー入力（小文字）
                char key = input.charAt(0);
                if (capslock) {
                    // capslockが有効な場合は大文字に変換
                    output.append(Character.toUpperCase(key));
                } else {
                    // 小文字のままで出力
                    output.append(key);
                }
            }
        }
        
        // 結果を出力
        System.out.println(output.toString());
        
        sc.close();
    }
}
/*nを読み込み、次に押されたキーの入力を順に処理します。
capslockの状態を管理するためのブール変数を用意します。capslockが押されると、この状態を反転させます。
shiftキーが押されると、その後に続くキーは大文字になります。shift+xのような入力を処理しています。
普通のキー（aからz）は、そのまま小文字として処理します。ただし、capslockが有効な場合は、大文字に変換されます。
最終的な文字列を作成し、出力します。*/

// Q.  ラッキーナンバー
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // 入力の受け取り
        int n = scanner.nextInt();
        int[] numbers = new int[n];
        for (int i = 0; i < n; i++) {
            numbers[i] = scanner.nextInt();
        }

        // 組み合わせを保存するリスト
        List<List<Integer>> allCombinations = new ArrayList<>();

        // 全ての組み合わせを列挙
        findCombinations(numbers, 0, new ArrayList<>(), allCombinations);

        // 足して777になる組み合わせを検索
        List<String> validCombinations = new ArrayList<>();
        for (List<Integer> combination : allCombinations) {
            int sum = 0;
            for (int num : combination) {
                sum += num;
            }
            if (sum == 777) {
                combination.sort(Integer::compareTo);  // 昇順にソート
                validCombinations.add(combination.toString().replaceAll("[\\[\\],]", ""));
            }
        }

        // 結果の出力
        if (validCombinations.size() == 0) {
            System.out.println("no answer");
        } else if (validCombinations.size() == 1) {
            System.out.println(validCombinations.get(0));
        } else {
            System.out.println("multiple answers");
        }
    }

    // 再帰的に組み合わせを探すメソッド
    private static void findCombinations(int[] numbers, int start, List<Integer> current, List<List<Integer>> allCombinations) {
        allCombinations.add(new ArrayList<>(current));  // 現在の組み合わせを追加
        for (int i = start; i < numbers.length; i++) {
            current.add(numbers[i]);
            findCombinations(numbers, i + 1, current, allCombinations);  // 次の組み合わせを探索
            current.remove(current.size() - 1);  // 最後の要素を削除して次の探索
        }
    }
}
/*入力の読み込み
n と与えられた数 x_1, x_2, ..., x_n を numbers 配列に格納します。
組み合わせの列挙
findCombinations メソッドは、再帰的に numbers 配列からすべての部分集合（組み合わせ）を求めます。
組み合わせを allCombinations リストに追加します。
777になる組み合わせの探索
allCombinations から各組み合わせの和を計算し、777になるものを validCombinations に保存します。
各組み合わせを昇順にソートし、出力用にリストに追加します。
結果の出力
validCombinations が空であれば "no answer" と出力します。
一つの組み合わせしかなければ、その組み合わせを出力します。
複数の組み合わせがあれば "multiple answers" と出力します。*/

// paizaの森練習問題コンテスト過去問題4　★
// Q.　花言葉
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        // 花の名前と花言葉をマッピング
        Map<String, String> flowerMap = new HashMap<>();
        flowerMap.put("rose", "I love you");
        flowerMap.put("cosmos", "harmony");
        flowerMap.put("tulip", "perfect lover");
        flowerMap.put("hydrangea", "heartlessness");
        flowerMap.put("jasmine", "amiability");

        // 標準入力から花の名前を取得
        Scanner scanner = new Scanner(System.in);
        String flowerName = scanner.nextLine().trim();
        scanner.close();

        // 花の名前に対応する花言葉を出力
        System.out.println(flowerMap.get(flowerName));
    }
}
/*HashMap の使用:
花の名前とその花言葉を HashMap<String, String> に格納。
キーとして花の名前、値として花言葉を保存。
入力の取得:
Scanner を使用して標準入力から花の名前を取得。
trim() を用いて余分な空白や改行を削除。
出力:
入力された花の名前をキーとして HashMap から対応する花言葉を取得し、出力。*/

// Q.　じゃんけん
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        char h = sc.next().charAt(0);

        if (h == 'R') {
            System.out.println('P');
        } else if (h == 'P') {
            System.out.println('S');
        } else if (h == 'S') {
            System.out.println('R');
        }
    }
}
/*入力された相手の手 h に勝つ手を出力します． G なら P P なら S S なら G です．*/

// Q.　四季
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int m = sc.nextInt();

        if (3 <= m && m <= 5) {
            System.out.println("spring");
        } else if (6 <= m && m <= 8) {
            System.out.println("summer");
        } else if (9 <= m && m <= 11) {
            System.out.println("autumn");
        } else {
            System.out.println("winter");
        }
    }
}

// Q.　オルタネーティングキャップス
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String s = sc.next();
        String answer = s.toLowerCase();

        System.out.println(answer);
    }
}
/*入力された月によって，条件分岐をすることを考えます．*/

// Q.  パワー100倍
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String p = sc.next();
        System.out.println(p + "00");
    }
}

// Q.  おつり
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int p = sc.nextInt();
        int[] coins = { 500, 100, 50, 10, 5, 1 };

        int answer = 0;
        for (int c : coins) {
            while (p >= c) {
                p -= c;
                answer++;
            }
        }

        System.out.println(answer);
    }
}
/*500円，100円，50円，10円，5円，1円と金額の大きい硬貨からお釣りの値段を越さない限り払う方法が，払う硬貨の数を最小にします．例えば500円のおつりを払うとき，500円玉だったら1枚で払うことができますが，500円玉以外の硬貨だと1枚より多い枚数を出さないといけません．
500円玉で払うのが最小です．また，お釣りが500円を下回ると500円玉で払うことはできないため，100円玉などの硬貨で，お釣りの金額を越さないできるだけ金額の大きい硬貨で払う方法が最小です．金額の大きい硬貨からお釣りの値段を越さない限り払う方法が，払う硬貨の数を最小にします．*/

// Q.  ゾロ目
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int x = sc.nextInt();
        System.out.println(x / 11 * 11);
    }
}
/*食べることができる大豆は11の倍数です．よって，大豆の数を11で割った商を求めて，11倍したものが答えです．*/

// Q.  いちばんお得
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int g1 = sc.nextInt();
        int p1 = sc.nextInt();
        int g2 = sc.nextInt();
        int p2 = sc.nextInt();

        if (p1 * g2 < p2 * g1) {
            System.out.println(1);
        } else {
            System.out.println(2);
        }
    }
}
/*入力を受け取って，グラム当たりの重さを比較します．*/

// Q.  重さの計算
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();

        System.out.println(x * n / k);
    }
}
/*1 個当たりの重さは [x/k] となり，それに n をかけることでn個分のボールの重さになります．*/

// Q.  寒暖差
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int bef = sc.nextInt();
        for (int i = 0; i < 9; i++) {
            int now = sc.nextInt();
            if (Math.abs(now - bef) >= 3) {
                System.out.println("Yes");
                System.exit(0);
            }
            bef = now;
        }

        System.out.println("No");
    }
}
/*入力を受け取って1日前の気温と3℃以上差があったら Yes , それ以外の時 No と出力します．*/

// paizaの森練習問題コンテスト過去問題5　★
// Q.　3割打者
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int m = sc.nextInt();
        if (10 * m >= 3 * n) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.　テレワーク可能か
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        String b = sc.next();

        if (a >= 30 || b.equals("rainy")) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.　文字列の反転
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String s = sc.next();
        String reversed = new StringBuffer(s).reverse().toString();

        System.out.println(reversed);
    }
}

// Q.　CD
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        int seconds = 0;
        for (int i = 0; i < n; i++) {
            int m = sc.nextInt(), s = sc.nextInt();
            seconds += 60 * m + s;
        }

        if (seconds <= 74 * 60) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.　サイクルヒット
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        int seconds = 0;
        for (int i = 0; i < n; i++) {
            int m = sc.nextInt(), s = sc.nextInt();
            seconds += 60 * m + s;
        }

        if (seconds <= 74 * 60) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.  条件を満たす最小の整数
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int x = sc.nextInt();
        int y = sc.nextInt();
        int z = sc.nextInt();

        while (x % y != z) {
            x++;
        }

        System.out.println(x);
    }
}

// paizaの森練習問題コンテスト過去問題6　★
// Q.　球数制限
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int k = sc.nextInt();
        int sum = 0;

        for (int i = 0; i < n; i++) {
            int m = sc.nextInt();
            sum += m;
        }
        if (sum < k) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.　最大イニング
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int k = sc.nextInt();
        int sum = 0;

        for (int i = 1; i <= 9; i++) {
            int m = sc.nextInt();
            sum += m;
            if (sum > k) {
                System.out.println(i);
                return;
            }
        }
        System.out.println("Yes");
    }
}

// Q.　ロボットの移動
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int x = sc.nextInt();
        int y = sc.nextInt();
        System.out.println(Math.abs(x) + Math.abs(y));
    }
}

// Q.　最大の差
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] v = new int[5];

        for (int i = 0; i < 5; i++) {
            int m = sc.nextInt();
            v[i] = m;
        }

        Arrays.sort(v);
        System.out.println(v[4] - v[0]);
    }
}

// Q.  中央値
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] v = new int[5];

        for (int i = 0; i < 5; i++) {
            int m = sc.nextInt();
            v[i] = m;
        }

        Arrays.sort(v);
        System.out.println(v[5 / 2]);
    }
}

// Q.  採点
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int sum = 0;

        for (int i = 0; i < n; i++) {
            String m = sc.next();
            if (m.equals("correct")) {
                sum += 2;
            } else if (m.equals("incorrect")) {
                sum--;
            }
        }
        System.out.println(sum);
    }
}

// paizaの森練習問題コンテスト過去問題7　★
// Q.　占い
import java.util.*;
import javax.lang.model.util.ElementScanner6;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        if (n == 7) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.　年収計算
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        System.out.println(a + c / 5 * b);
    }
}

// Q.　気温
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int x = sc.nextInt();
        if (x >= 35) {
            System.out.println("extremely hot day");
        } else if (x >= 30) {
            System.out.println("hot summer day");
        } else if (x >= 25) {
            System.out.println("summer day");
        } else if (x < 0) {
            System.out.println("ice day");
        } else {
            System.out.println("normal day");
        }
    }
}

// Q.　気温2
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int max_val = -21, min_val = 41;
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = sc.nextInt();
            if (x[i] > max_val) {
                max_val = x[i];
            }
            if (x[i] < min_val) {
                min_val = x[i];
            }
        }
        System.out.println(max_val - min_val);
    }
}

// Q.  ブロックの埋め込み
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();

        System.out.println(n * m / 2);
    }
}

// Q.  最も大きな最大公約数
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        System.out.println(n / 2);
    }
}

// Q.　三冠王
import java.util.*;
import javax.lang.model.util.ElementScanner6;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        double[] b = new double[n];
        int[] r = new int[n];
        int[] h = new int[n];
        for (int i = 0; i < n; i++) {
            b[i] = sc.nextDouble();
            r[i] = sc.nextInt();
            h[i] = sc.nextInt();
        }
        int[] flag = new int[n];
        Arrays.fill(flag, 0);
        double max_b = 0;
        for (int i = 0; i < n; i++) {
            max_b = Math.max(max_b, b[i]);
        }
        int max_r = 0;
        for (int i = 0; i < n; i++) {
            max_r = Math.max(max_r, r[i]);
        }
        int max_h = 0;
        for (int i = 0; i < n; i++) {
            max_h = Math.max(max_h, h[i]);
        }
        for (int i = 0; i < n; i++) {
            if (b[i] == max_b) {
                flag[i]++;
            }
            if (r[i] == max_r) {
                flag[i]++;
            }
            if (h[i] == max_h) {
                flag[i]++;
            }
        }
        int max_flag = 0;
        for (int i = 0; i < n; i++) {
            max_flag = Math.max(max_flag, flag[i]);
        }
        if (max_flag == 3) {
            System.out.println("Triple");
        } else if (max_flag == 2) {
            System.out.println("Double");
        } else {
            System.out.println("Nobody");
        }
    }
}

// paizaの森練習問題コンテスト過去問題8　★
// Q.　文字数カウント
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String m = sc.nextLine();
        System.out.println(m.length());
    }
}

// Q.　乗客人数
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        System.out.println(a - b + c);
    }
}

// Q.  OPS
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        double n = sc.nextDouble();
        double m = sc.nextDouble();

        System.out.printf("%.3f\n", n + m);

        sc.close();
    }
}

// Q.　通貨レート
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        double[] m = new double[n];
        for (int i = 0; i < n; i++) {
            m[i] = sc.nextInt();
        }
        int first = -1, second = -1;
        double max_diff = 1;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if (m[j] / m[i] > max_diff) {
                    first = i;
                    second = j;
                    max_diff = m[j] / m[i];
                }
            }
        }
        if (max_diff > 1) {
            System.out.println(first + 1);
            System.out.println(second + 1);
        } else {
            System.out.println("No");
        }
    }
}

// Q.　乗客人数その2
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] a = new int[n];
        int[] b = new int[n];
        for (int i = 0; i < n; i++) a[i] = sc.nextInt();
        for (int i = 0; i < n; i++) b[i] = sc.nextInt();
        int ans = 0;
        int now = 0;
        for (int i = 0; i < n; i++) {
            now -= a[i];
            now += b[i];
            ans = Math.max(ans, now);
        }
        System.out.println(ans);
    }
}

// Q.  OPSその2
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        double ma = 0;
        int res = 0;
        for (int i = 0; i < n; i++) {
            double b = sc.nextDouble();
            double s = sc.nextDouble();
            int bi = (int) (b * 1000);
            int si = (int) (s * 1000);
            if (ma < bi + si) {
                res = i + 1;
                ma = bi + si;
            }
        }
        System.out.println(res);
    }
}

// Q.  タスクスケジューリング
import java.util.Scanner;
import java.util.TreeMap;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        TreeMap<Integer, Integer> mp = new TreeMap<Integer, Integer>();
        for (int i = 0; i < n; i++) {
            int s = sc.nextInt();
            int t = sc.nextInt();
            mp.put(t, s);
        }
        int ans = 0;
        int time = 0;
        for (int key : mp.keySet()) {
            if (mp.get(key) > time) {
                ans++;
                time = key;
            }
        }
        System.out.println(ans);
    }
}

// paizaの森練習問題コンテスト過去問題9　★
// Q.　最大値と最小値
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] a = new int[3];
        for (int i = 0; i < 3; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        System.out.println(a[0] + " " + a[2]);
    }
}

// Q.　卵の生産
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int n = sc.nextInt();
        System.out.println(a * n);
    }
}

// Q.　卵の生産の最大量
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int ans = 0;
        for (int i = 0; i < n - k + 1; i++) {
            int su = 0;
            for (int j = 0; j < k; j++) {
                su += a[i + j];
            }
            ans = Math.max(ans, su);
        }
        System.out.println(ans);
    }
}

// Q.　卵の生産の最大量 その2
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int ans = 0;
        int su = 0;
        for (int i = 0; i < n - k + 1; i++) {
            if (i == 0) {
                for (int j = 0; j < k; j++) {
                    su += a[i + j];
                }
            } else {
                su += a[i + k - 1];
                su -= a[i - 1];
            }
            ans = Math.max(ans, su);
        }
        System.out.println(ans);
    }
}

// Q.  卵をぴったり生産
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int ans = 0;
        for (int bit = 0; bit < (1 << n); bit++) {
            int su = 0;
            for (int j = 0; j < n; j++) {
                if ((1 & bit >> j) == 1) {
                    su += a[j];
                }
            }

            if (su == k) ans++;
        }
        System.out.println(ans);
    }
}

// paizaの森練習問題コンテスト過去問題10　★
// Q.　座席
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String[] s = new String[9];
        for (int i = 0; i < 9; i++) {
            s[i] = sc.nextLine();
        }
        for (int i = 0; i < 3; i++) {
            System.out.println(
                s[i * 3] + " " + s[i * 3 + 1] + " " + s[i * 3 + 2]
            );
        }
    }
}

// Q.　平均と平均
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        double arithmeticMeanPow = (a + b) * (a + b) / 4.0;
        double geometricMeanPow = (a * b);
        if (arithmeticMeanPow > geometricMeanPow) {
            System.out.println("arithmetic");
        } else if (arithmeticMeanPow < geometricMeanPow) {
            System.out.println("geometric");
        } else {
            System.out.println("equal");
        }
    }
}

// Q.　親と子
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        if (a * 2 + 1 == b || a * 2 + 2 == b) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.　卒論締め切り
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();

        if (n <= a * Math.min(30, b)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.  WBC
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String w = sc.nextLine();
        for (int i = 0; i < 3; i++) {
            if ('A' <= w.charAt(i) && w.charAt(i) <= 'Z') continue;
            System.out.println("No");
            return;
        }
        System.out.println("Yes");
    }
}

// Q.  paizaとタイピング
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String s = sc.nextLine();
        int n = s.length();
        char[] verif = { 'p', 'a', 'i', 'z', 'a' };
        int cnt = 0;
        for (int i = 0; i < n; i++) {
            if (cnt == 5) break;
            if (s.charAt(i) == verif[cnt]) {
                cnt++;
            }
        }
        if (cnt == 5) System.out.println("Yes"); else System.out.println("No");
    }
}

// paizaの森練習問題コンテスト過去問題11　★
// Q.　お菓子の合計金額
import java.util.Scanner;
import java.util.TreeMap;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        System.out.println(a + b);
    }
}

// Q.　フィボナッチ数列
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        int a = 1;
        int b = 1;
        System.out.println(a);
        System.out.println(b);
        for (int i = 3; i <= 10; i++) {
            int f = a + b;
            System.out.println(f);
            b = a;
            a = f;
        }
    }
}

// Q.　素数判定
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        if (n == 1) {
            System.out.println("No");
            return;
        }
        for (int i = 2; i < n; i++) {
            if (n % i == 0) {
                System.out.println("No");
                return;
            }
        }
        System.out.println("Yes");
    }
}

// Q.　残業時間
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int sum = 0;

        for (int i = 0; i < 30; i++) {
            int m = sc.nextInt();
            sum += m;
        }

        System.out.println(sum - 8 * 30);
    }
}

// Q.  ロボットの移動-その2
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int x = sc.nextInt();
        int y = sc.nextInt();
        if (x != y) {
            System.out.println(Math.max(Math.abs(x), Math.abs(y)) * 2 - 1);
        } else {
            System.out.println(Math.abs(x) * 2);
        }
    }
}

// Q.  辞書順で最も小さい文字列
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        String s = sc.next();

        char[] tmp_c = s.toCharArray();
        Arrays.sort(tmp_c);
        String sorted_s = new String(tmp_c);
        System.out.println(sorted_s);
    }
}

// Q.  全員が正当
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int m = sc.nextInt();
        int c[][] = new int[m][n];
        int ans[] = new int[n];
        for (int i = 0; i < n; i++) ans[i] = 1;

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                c[i][j] = sc.nextInt();
                ans[j] &= c[i][j];
                if (i == m - 1) {
                    if (ans[j] == 1) {
                        System.out.println("Yes");
                        return;
                    }
                }
            }
        }
        System.out.println("No");
    }
}

// paizaの森練習問題コンテスト過去問題12　★
// Q.　文字列の一致
import java.util.Scanner;
import java.util.TreeMap;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String a = sc.nextLine();
        String b = sc.nextLine();
        System.out.println(a.equals(b) ? "Yes" : "No");
    }
}

// Q.　部分文字列
import java.util.Scanner;
import java.util.TreeMap;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String a = sc.nextLine();
        String b = sc.nextLine();
        System.out.println(a.contains(b) ? "Yes" : "No");
    }
}

// Q.　グラフの連結
import java.util.Scanner;
import java.util.TreeMap;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        boolean[][] t = new boolean[3][3];
        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            t[a][b] = t[b][a] = true;
        }
        System.out.println(t[0][2] || t[0][1] && t[1][2] ? "Yes" : "No");
    }
}

// Q.　拡張子
import java.util.Scanner;
import java.util.TreeMap;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String s = sc.nextLine();
        int idx_jpg = s.indexOf(".jpg");
        int idx_png = s.indexOf(".png");
        if (idx_png == -1) {
            System.out.println(idx_jpg);
        } else if (idx_jpg == -1) {
            System.out.println(idx_png);
        } else if (idx_jpg < idx_png) {
            System.out.println(idx_jpg);
        } else {
            System.out.println(idx_png);
        }
    }
}

// Q.　日程調整
import java.lang.Math;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int l1 = sc.nextInt();
        int r1 = sc.nextInt();
        int l2 = sc.nextInt();
        int r2 = sc.nextInt();
        System.out.println(
            Math.max(0, Math.min(r1, r2) - Math.max(l1, l2) + 1)
        );
    }
}

// Q.  プレゼントの好み
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] a = new int[n + 1];
        int ma = -1;
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
            if (ma < a[i]) {
                ma = a[i];
            }
        }
        for (int i = 0; i < k; i++) {
            int b = sc.nextInt();
            b--;
            if (a[b] == ma) {
                System.out.println("Yes");
                return;
            }
        }
        System.out.println("No");
    }
}

問題コンテスト過去問題13　★
// Q.　先頭が一致
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String a = scanner.nextLine().trim();
        String b = scanner.nextLine().trim();

        // b の先頭に a が現れるか
        if (b.startsWith(a)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        // a の先頭に b が現れるか
        if (a.startsWith(b)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.　合計と平均
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int sum = 0;
        for (int i = 0; i < n; i++) sum += sc.nextInt();

        int avg = sum / n;

        System.out.println(sum);
        System.out.println(avg);
    }
}

// Q.　二等辺三角形
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        if (a == b || b == c || c == a) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.　飽き性
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();

        System.out.println(Math.min(a, b) + " " + Math.abs(a - b) / 2);
    }
}

// Q.　占い その2
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int sum = 0;
        for (int i = 0; i < n; i++) {
            int tmp = sc.nextInt();
            sum += tmp;
        }
        if (sum % 7 == 0) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.  連結判定
import java.util.*;

public class Main {
    static ArrayList<ArrayList<Integer>> graph;
    static boolean[] visited;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(); // 頂点数
        int m = sc.nextInt(); // 辺の数

        // 隣接リストの初期化
        graph = new ArrayList<>();
        for (int i = 0; i <= n; i++) {
            graph.add(new ArrayList<>());
        }

        // 辺の情報を格納（無向グラフなので双方向に追加）
        for (int i = 0; i < m; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            graph.get(a).add(b);
            graph.get(b).add(a);
        }

        visited = new boolean[n + 1];
        dfs(1); // 頂点1から探索開始

        // すべての頂点が訪問されているか確認（1からnまで）
        for (int i = 1; i <= n; i++) {
            if (!visited[i]) {
                System.out.println("No");
                return;
            }
        }
        System.out.println("Yes");
    }

    // 深さ優先探索
    static void dfs(int v) {
        visited[v] = true;
        for (int u : graph.get(v)) {
            if (!visited[u]) {
                dfs(u);
            }
        }
    }
}
/*標準入力やリスト操作などに必要なユーティリティクラス（Scanner, ArrayList など）を読み込む。Javaのエントリーポイント（実行開始点）となるクラス Main を宣言します。
graph は隣接リスト形式のグラフ構造（頂点ごとの隣接頂点を格納）です。visited は各頂点をすでに訪問したかを記録する 真偽値配列 です。入力を受け取るための Scanner インスタンスを作成します。
最初の入力行から、頂点数 n と辺の数 m を受け取ります。グラフの構造を初期化します。graph.get(i) は、頂点 i に隣接する頂点を格納するリストです。添字が 1 から n を使えるように、0 番目も空で確保します。
各辺の情報を受け取り、無向グラフとして graph に追加していきますわ。a から b へ、また b から a への接続を双方向に登録いたします。自己ループ（a = b）や多重辺もそのまま追加して問題ございません。頂点番号に対応した訪問記録配列 visited を初期化いたします。
デフォルトで全て false（未訪問）となりますの。頂点1から、深さ優先探索（DFS）を開始します。この操作によって、1から到達できるすべての頂点が visited に記録されますわ。
DFSの後、頂点1〜nまでを確認し、1つでも未訪問の頂点があれば「No」と出力して終了します。これは「どこか孤立した頂点がある」ことを意味し、グラフが非連結であると判断されます。
すべての頂点が訪問済みであれば、グラフは連結であると判断し、「Yes」を出力いたします。こちらがDFSの本体でございます。頂点 v を訪問済みにしたうえで、隣接する頂点 u に対して再帰的に探索を行います。
すでに訪問済みの頂点はスキップして、無限ループを回避しております。*/

// paizaの森練習問題コンテスト過去問題14　★
// Q.　回文
import java.util.Scanner;
import java.util.TreeMap;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String s = sc.next();
        for (int i = 0; i < s.length() / 2; i++) {
            if (s.charAt(i) != s.charAt(s.length() - 1 - i)) {
                System.out.println("No");
                return;
            }
        }

        System.out.println("Yes");
    }
}

// Q.　区間の三分割
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // 入力を受け取る
        int l = scanner.nextInt();
        int r = scanner.nextInt();

        // 計算（区間の三等分における中央2点）
        double left = l + (r - l) / 3.0;
        double right = r - (r - l) / 3.0;

        // 小数で出力（スペース区切り）
        System.out.printf("%.10f %.10f\n", left, right);
    }
}

// Q.　割り切れる数の個数
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int a = scanner.nextInt();
        int b = scanner.nextInt();

        int count = 0;
        for (int i = a; i <= b; i++) {
            if (i % 2 == 0 || i % 3 == 0) {
                count++;
            }
        }

        System.out.println(count);
    }
}

// Q.　パイプを切る
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();
        int k = scanner.nextInt();

        int count = 0;

        for (int i = 0; i < n; i++) {
            int a = scanner.nextInt();
            count += a / k;
        }

        System.out.println(count);
    }
}

// Q.　好みのピザ
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt(); // ピザのメニュー数（使わないが入力仕様上読む）
        int m = scanner.nextInt(); // 客数

        Set<Integer> pizzaSet = new HashSet<>();

        for (int i = 0; i < m; i++) {
            int a = scanner.nextInt(); // 注文されたピザの種類
            pizzaSet.add(a); // Setに追加（自動的に重複除去）
        }

        System.out.println(pizzaSet.size()); // 作る必要のあるピザの種類数
    }
}

// Q.  家計の収支
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt(); // 月数
        int k = scanner.nextInt(); // 初期の貯金額

        int[] income = new int[n]; // 月ごとの収入
        int[] expense = new int[n]; // 月ごとの支出

        for (int i = 0; i < n; i++) {
            income[i] = scanner.nextInt();
        }

        for (int i = 0; i < n; i++) {
            expense[i] = scanner.nextInt();
        }

        int savings = k;

        for (int i = 0; i < n; i++) {
            savings += income[i] - expense[i];
        }

        System.out.println(savings);
    }
}

// Q.  野球世界大会 1 次ラウンドの順位
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // 1. 国名5つ読み込み
        List<String> teams = new ArrayList<>();
        Map<String, Integer> winCount = new HashMap<>();
        for (int i = 0; i < 5; i++) {
            String team = scanner.nextLine();
            teams.add(team);
            winCount.put(team, 0); // 初期勝ち数は0
        }

        // 2. 試合結果10個読み込み
        for (int i = 0; i < 10; i++) {
            String line = scanner.nextLine();
            String[] parts = line.split(" ");
            String[] countries = parts[0].split("-");
            String country1 = countries[0];
            String country2 = countries[1];
            int result = Integer.parseInt(parts[1]);

            // 勝った国に +1
            if (result == 1) {
                winCount.put(country1, winCount.get(country1) + 1);
            } else {
                winCount.put(country2, winCount.get(country2) + 1);
            }
        }

        // 3. チームを勝ち数降順、辞書順昇順でソート
        teams.sort((a, b) -> {
            int winsA = winCount.get(a);
            int winsB = winCount.get(b);
            if (winsA != winsB) {
                return Integer.compare(winsB, winsA); // 勝ち数が多い方を上に
            }
            return a.compareTo(b); // 辞書順
        });

        // 4. 上位2チームを出力
        System.out.println(teams.get(0));
        System.out.println(teams.get(1));
    }
}

// paizaの森練習問題コンテスト過去問題15　★
// Q.　出力の練習
public class Main {
    public static void main(String[] args) {
        // 好きな文字列をここに記入します
        String favorite = "test";
        
        // 1行で出力
        System.out.println(favorite);
    }
}

// Q.　red があるか調べてみよう
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // 1行の文字列を読み込む
        String line = sc.nextLine();
        
        // 半角スペースで分割して配列にする
        String[] words = line.split(" ");
        
        // "red" が含まれるかチェック
        boolean found = false;
        for (String word : words) {
            if (word.equals("red")) {
                found = true;
                break;
            }
        }
        
        // 結果出力
        System.out.println(found ? "Yes" : "No");

        sc.close();
    }
}

// Q.　階乗
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // 整数 n を1行で読み込む
        int n = sc.nextInt();
        int factorial = 1;

        // 1からnまで掛け算
        for (int i = 1; i <= n; i++) {
            factorial *= i;
        }

        // 結果を1行で出力
        System.out.println(factorial);

        sc.close();
    }
}

// Q.　単語のカウント
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // 入力行を読み込む
        String line = sc.nextLine();
        String[] words = line.split(" ");

        // 出現順を保持する LinkedHashMap を使用
        Map<String, Integer> countMap = new LinkedHashMap<>();

        for (String word : words) {
            countMap.put(word, countMap.getOrDefault(word, 0) + 1);
        }

        // 出現順に出力
        for (Map.Entry<String, Integer> entry : countMap.entrySet()) {
            System.out.println(entry.getKey() + " " + entry.getValue());
        }

        sc.close();
    }
}

// Q.　倍数の存在
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // a, b, c を読み込む
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        // b 以上の最小の a の倍数
        int minMultiple = ((b + a - 1) / a) * a;

        // その倍数が c 以下なら Yes、そうでなければ No
        if (minMultiple <= c) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

// Q.  全員が不正答
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // n: 問題数, m: 生徒数
        int n = sc.nextInt();
        int m = sc.nextInt();

        int[][] answers = new int[m][n];

        // 生徒ごとの解答を読み込む
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                answers[i][j] = sc.nextInt();
            }
        }

        boolean allIncorrectExists = false;

        // 各問題ごとにチェック
        for (int j = 0; j < n; j++) {
            boolean allIncorrect = true;
            for (int i = 0; i < m; i++) {
                if (answers[i][j] == 1) { // 正答者がいれば
                    allIncorrect = false;
                    break;
                }
            }
            if (allIncorrect) {
                allIncorrectExists = true;
                break;
            }
        }

        System.out.println(allIncorrectExists ? "Yes" : "No");

        sc.close();
    }
}

// paizaの森練習問題コンテスト過去問題16　★
// Q.　3つの数
import java.util.*;

public class Main {

    public static void main(String[] args) {
        System.out.println(8);
        System.out.println(1);
        System.out.println(3);
    }
}

// Q.　税込価格
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int p = sc.nextInt();
        char s = sc.next().charAt(0);
        if (s == 'T') {
            System.out.println((int)(p * 1.1));
        } else {
            System.out.println((int)(p * 1.08));
        }
    }
}

// Q.　パターン検出
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // N 個の文字列
        int N = sc.nextInt();
        sc.nextLine(); // 改行を読み飛ばす

        String[] S = new String[N];
        for (int i = 0; i < N; i++) {
            S[i] = sc.nextLine();
        }

        // 判定対象の文字列 T
        String T = sc.nextLine();

        boolean found = false;

        for (int i = 0; i < N; i++) {
            if (T.contains(S[i])) {
                found = true;
                break;
            }
        }

        System.out.println(found ? "Yes" : "No");

        sc.close();
    }
}

// Q.　連続ホームラン
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();  // n 打席に 1 度
        int m = sc.nextInt();  // m 打席連続

        // 確率計算
        double probability = Math.pow(1.0 / n, m);

        // 誤差許容 → 小数点以下6桁程度で出力
        System.out.printf("%.6f%n", probability);
    }
}

// Q.　辞書順で 3 番目に小さい文字列
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        
        char[] chars = s.toCharArray();
        Arrays.sort(chars);  // 最小の辞書順に並べ替え
        int count = 1; // 現在の順列の順位（1番目）
        
        while (count < 3) {
            nextPermutation(chars);
            count++;
        }
        
        System.out.println(new String(chars));
    }
    
    // 次の辞書順の順列を生成する
    static boolean nextPermutation(char[] arr) {
        int i = arr.length - 2;
        while (i >= 0 && arr[i] >= arr[i + 1]) {
            i--;
        }
        if (i < 0) {
            return false; // 最後の順列
        }
        
        int j = arr.length - 1;
        while (arr[j] <= arr[i]) {
            j--;
        }
        
        swap(arr, i, j);
        
        // i+1 以降を反転
        reverse(arr, i + 1, arr.length - 1);
        
        return true;
    }
    
    static void swap(char[] arr, int i, int j) {
        char temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    
    static void reverse(char[] arr, int start, int end) {
        while (start < end) {
            swap(arr, start++, end--);
        }
    }
}

// Q.  村人の友好関係(easy)
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int M = sc.nextInt();
        int Q = sc.nextInt();

        int[][] friendship = new int[N + 1][N + 1];

        // 友好度を読み込む
        for (int i = 0; i < M; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            int f = sc.nextInt();
            friendship[a][b] = f;
            friendship[b][a] = f;
        }

        // 同好会メンバーを管理
        Set<Integer> group = new HashSet<>();

        // ログを処理
        for (int i = 0; i < Q; i++) {
            String op = sc.next();
            int q = sc.nextInt();
            if (op.equals("+")) {
                group.add(q);
            } else {
                group.remove(q);
            }
        }

        // グループが空か全員 → 人気度 0
        if (group.size() == 0 || group.size() == N) {
            System.out.println(0);
            return;
        }

        // 人気度を計算
        int maxFriendship = 0;
        for (int inMember : group) {
            for (int outMember = 1; outMember <= N; outMember++) {
                if (!group.contains(outMember)) {
                    maxFriendship = Math.max(maxFriendship, friendship[inMember][outMember]);
                }
            }
        }

        System.out.println(maxFriendship);
    }
}

// paizaの森練習問題コンテスト過去問題17　★
// Q.　最大値と最小値
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        System.out.println(Math.max(a, Math.max(b, c)));
        System.out.println(Math.min(a, Math.min(b, c)));
    }
}

// Q.  神経衰弱
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] cards = new int[4];
        for (int i = 0; i < 4; i++) {
            cards[i] = sc.nextInt();
        }
        Arrays.sort(cards);

        if (cards[0] == cards[1] && cards[2] == cards[3]) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.  じゃんけん(忖度)
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int y = sc.nextInt();
        char h = sc.next().charAt(0);

        String rps = "RPS";
        int ansIndex = rps.indexOf(h);

        if (y < 10) {
            ansIndex--;
        } else {
            ansIndex++;
        }

        ansIndex = (ansIndex + 3) % 3;

        System.out.println(rps.charAt(ansIndex));
    }
}

// Q.  n→10進法
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        String a = sc.next();
        int ans = Integer.parseInt(a, n);

        System.out.println(ans);
    }
}

// Q.  お菓子の価格帯
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int q = sc.nextInt();
        for (int t = 0; t < q; t++) {
            int ans = 0;
            int l = sc.nextInt();
            int r = sc.nextInt();
            for (int i = 0; i < n; i++) {
                if (l <= a[i] && a[i] <= r) ans++;
            }
            System.out.println(ans);
        }
    }
}

// Q.  ぴったり卵を生産 その2
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        long k = sc.nextLong();
        long[] a = new long[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLong();
        }

        ArrayList<Long> P = new ArrayList<Long>();
        for (int bit = 0; bit < (1 << n / 2); bit++) {
            long sum = 0;
            for (int j = 0; j < n / 2; j++) {
                if ((1 & bit >> j) == 1) {
                    sum += a[j];
                }
            }
            P.add(sum);
        }
        ArrayList<Long> Q = new ArrayList<Long>();
        for (int bit = 0; bit < (1 << n - n / 2); bit++) {
            long sum = 0;
            for (int j = 0; j < n - n / 2; j++) {
                if ((1 & bit >> j) == 1) {
                    sum += a[j + n / 2];
                }
            }
            Q.add(sum);
        }

        Collections.sort(Q);
        ArrayList<Long> Q_mi = new ArrayList<Long>();
        for (int i = 0; i < Q.size(); i++) {
            Q_mi.add(-Q.get(i));
        }
        Collections.sort(Q_mi);
        long ans = 0;
        for (int i = 0; i < P.size(); i++) {
            int pos1 = ~Collections.binarySearch(
                Q,
                k - P.get(i),
                (x, y) -> x.compareTo(y) >= 0 ? 1 : -1
            );
            if (pos1 < Q.size() && Q.get(pos1) == k - P.get(i)) {
                int pos2 =
                    Q_mi.size() -
                    1 -
                    ~Collections.binarySearch(
                        Q_mi,
                        -(k - P.get(i)),
                        (x, y) -> x.compareTo(y) >= 0 ? 1 : -1
                    );
                ans += pos2 - pos1 + 1;
            }
        }
        System.out.println(ans);
    }
}

// paizaの森練習問題コンテスト過去問題18　★
// Q.　値の整列
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] a = new int[4];
        for (int i = 0; i < 4; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        for (int i = 0; i < 4; i++) {
            System.out.println(a[i]);
        }
    }
}

// Q.  シープラスプラスプラス
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        System.out.print("C");
        for (int i = 0; i < n; i++) {
            System.out.print("+");
        }
        System.out.println();
    }
}

// Q.  大晦日
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String date = sc.nextLine();
        int y = Integer.parseInt(date.substring(0, 4));
        int m = Integer.parseInt(date.substring(5, 7));
        int d = Integer.parseInt(date.substring(8, 10));
        if (m == 12 && d == 31) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.  背の順に並んでいるか
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] a = new int[n];
        int[] b = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = b[i] = sc.nextInt();
        }

        Arrays.sort(a);

        boolean yes = true;
        for (int i = 0; i < n; i++) {
            if (a[i] != b[i]) {
                yes = false;
            }
        }

        if (yes) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.  遠足のお菓子
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int x = sc.nextInt();

        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += sc.nextInt();
        }

        if (sum <= x) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.  陣取りゲーム
import java.util.*;

public class Main {
    static int H, W;
    static char[][] grid;
    static Queue<int[]> queueA = new LinkedList<>();
    static Queue<int[]> queueB = new LinkedList<>();
    static int[] dx = {1, -1, 0, 0};
    static int[] dy = {0, 0, 1, -1};

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        H = sc.nextInt();
        W = sc.nextInt();
        String firstPlayer = sc.next();
        sc.nextLine();

        grid = new char[H][W];
        for (int i = 0; i < H; i++) {
            String line = sc.nextLine();
            for (int j = 0; j < W; j++) {
                grid[i][j] = line.charAt(j);
                if (grid[i][j] == 'A') queueA.add(new int[]{i, j});
                if (grid[i][j] == 'B') queueB.add(new int[]{i, j});
            }
        }

        boolean turnA = firstPlayer.equals("A");

        while (!queueA.isEmpty() || !queueB.isEmpty()) {
            if (turnA) {
                queueA = expand(queueA, 'A');
            } else {
                queueB = expand(queueB, 'B');
            }
            turnA = !turnA; // プレイヤー交代
        }

        int countA = 0, countB = 0;
        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                if (grid[i][j] == 'A') countA++;
                if (grid[i][j] == 'B') countB++;
            }
        }

        System.out.println(countA + " " + countB);
        System.out.println(countA > countB ? "A" : "B");
    }

    static Queue<int[]> expand(Queue<int[]> queue, char player) {
        Queue<int[]> next = new LinkedList<>();
        while (!queue.isEmpty()) {
            int[] cur = queue.poll();
            for (int k = 0; k < 4; k++) {
                int nx = cur[0] + dx[k];
                int ny = cur[1] + dy[k];
                if (nx < 0 || ny < 0 || nx >= H || ny >= W) continue;
                if (grid[nx][ny] == '.') {
                    grid[nx][ny] = player;
                    next.add(new int[]{nx, ny});
                }
            }
        }
        return next;
    }
}

// paizaの森練習問題コンテスト過去問題19　★
// Q.  paiza2025
import java.util.*;

public class Main {

    public static void main(String[] args) {
        System.out.println("paiza2025");
    }
}

// Q.  ABCカウント
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int a = 0;
        int b = 0;
        int c = 0;
        for (int i = 0; i < n; i++) {
            char chr = sc.next().charAt(0);
            if (chr == 'A') {
                a++;
            } else if (chr == 'B') {
                b++;
            } else if (chr == 'C') {
                c++;
            }
        }
        System.out.println(a);
        System.out.println(b);
        System.out.println(c);
    }
}

// Q.  円卓のk番目
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int k = sc.nextInt();

        System.out.println((k - 1) % n + 1);
    }
}

// Q.  素数
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        Boolean res = true;
        for (int i = 2; i * i <= n; i++) {
            if (n % i == 0) res = false;
        }
        if (res) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

// Q.  視界の広さ
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int h = sc.nextInt();
        int w = sc.nextInt();
        char[][] s = new char[h][w];

        for (int i = 0; i < h; i++) {
            s[i] = sc.next().toCharArray();
        }

        int ai = -1, aj = -1;
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (s[i][j] == 'A') {
                    ai = i;
                    aj = j;
                }
            }
        }

        // 南
        for (int i = ai + 1; i < h; i++) {
            if (s[i][aj] == '.') {
                s[i][aj] = 'V';
            } else {
                break;
            }
        }

        // 北
        for (int i = ai - 1; i >= 0; i--) {
            if (s[i][aj] == '.') {
                s[i][aj] = 'V';
            } else {
                break;
            }
        }

        // 東
        for (int j = aj + 1; j < w; j++) {
            if (s[ai][j] == '.') {
                s[ai][j] = 'V';
            } else {
                break;
            }
        }

        // 西
        for (int j = aj - 1; j >= 0; j--) {
            if (s[ai][j] == '.') {
                s[ai][j] = 'V';
            } else {
                break;
            }
        }

        for (int i = 0; i < h; i++) {
            System.out.println(s[i]);
        }
    }
}

// Q.  集合体の数
import java.util.Scanner;

public class Main {

    static final int[] di = { 0, 1, 0, -1 };
    static final int[] dj = { -1, 0, 1, 0 };

    static int h, w;
    static char[][] s;

    static void fill(char c, int ci, int cj) {
        s[ci][cj] = '.';
        for (int k = 0; k < 4; k++) {
            int i = ci + di[k];
            int j = cj + dj[k];
            if (0 <= i && i < h && 0 <= j && j < w && s[i][j] == c) {
                fill(c, i, j);
            }
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        h = sc.nextInt();
        w = sc.nextInt();
        s = new char[h][w];

        for (int i = 0; i < h; i++) {
            s[i] = sc.next().toCharArray();
        }

        int connected_components = 0;
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (s[i][j] != '.') {
                    fill(s[i][j], i, j);
                    connected_components++;
                }
            }
        }

        System.out.println(connected_components);
    }
}
